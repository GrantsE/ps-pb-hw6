#Задача №1: множественная форма числительных
import pymorphy2

#Задаем класс MorphAnalyzer из библиотеки pymorphy2
morphy = pymorphy2.MorphAnalyzer()

def plural_form(numbers, word1, word2, word3):
    numbers = str(numbers)
    #В случае, если вводится цифра, оканчивающаяся всегда на 1, то выводится слово в единственном числе (Именительный падеж). 11 исключается, так как отвечает на вопрос Кого? Чего?
    if numbers[-1] == '1' and numbers != '11':
    #С помощью метода parse() разбираем слово и получив объект parse склоняем слово, используя его метод parse.inflect(). Sing - единственное число, nomn - Именительный падеж
        return numbers + " " + morphy.parse(word1)[0].inflect({'sing', 'nomn'})[0]
    #Задаем условие, при котором будет выводится слово в единственном числе (Родительный падеж)
    elif (numbers[-1] >= '2' and numbers[-1] <= '4') and (not numbers == '12' and numbers != '13' and not numbers == '14'):
    #Для вывода единственного числа в Родительном падеже используем тот же метод, но указываем gent (Родительный падеж)
        return numbers + " " +  morphy.parse(word1)[0].inflect({'sing', 'gent'})[0]
    #Слово, которое не будет удовлетворять условиям выше выводится в множественном числе (множественное число указываем как plur, Родительный падеж - gent при выводе) 
    else:
        return numbers + " " +  morphy.parse(word1)[0].inflect({'plur', 'gent'})[0]


print(plural_form(1, 'яблоко', 'яблока', 'яблок'))
print(plural_form(2, 'яблоко', 'яблока', 'яблок'))
print(plural_form(11, 'студент', 'студента', 'студентов'))
print(plural_form(15, 'студент', 'студента', 'студентов'))
print(plural_form(3, 'студент', 'студента', 'студентов'))


#Задача №2: FizzBuzz
number_input = ()
#Задаём цикл while. В случае, если будет введено число, не удовлетворяющее трём условиям, программа позволит ввести данные заново
while len(number_input) >= 0:
    number_input = input("Введите число: ")
    #Задаём условия. Если число делится на 3, то выводится Fizz, если на 5, то Buzz, если на 3 и на 5, то FizzBuzz.
    if float(number_input) % 5 == 0 and float(number_input) % 3 == 0:
        print('FizzBuzz')
        break
    elif float(number_input) % 3 == 0:
        print('Fizz')
        break
    elif float(number_input) % 5 == 0:
        print('Buzz')
        break
    else:
        print('Введённое число не делится на 3 и 5. Повторите попытку')
    
#Написать программу, которая выводит сумму чисел из диапазона от 1000 до 20000 включительно, которые делятся и на 3 и на 5.
#Создаём список и циклом for проходимся по диапазону от 1000 до 20000 включительно. Передаём в массив только те числа, которые делятся на 3 и 5. Далее при помощи sum выводим сумму этих чисел
sum_of_numbers = [i for i in range(1000,20001) if i % 3 == 0 and i % 5 == 0]
print(f'Cумма чисел из диапазона от 1000 до 20000 включительно, которые делятся и на 3 и на 5 - {sum(sum_of_numbers)}')


#Задача №3: Последовательность Фибоначчи
def define_fibonachi_numbers(n):
    x = [1, 1]
    #находим числа Фибоначчи, если число i = сумме двух предыдущих чисел, то добавляем в переменную x
    for i in range(0, n + 1):
        if i == x[-1] + x[-2]:
            x.append(i)
    #При помощи цикла for передаём в список только четные элементы
    even_numbers = [s for s in x if s % 2 == 0]
    return f'Список {x}\nКоличество элементов в последовательности - {len(x)}\nCумма всех четных элементов - {sum(even_numbers)}\nЧётные элементы - {even_numbers}\nПредпоследнее число последовательности - {x[-2]}'
 
print(define_fibonachi_numbers(10000000))